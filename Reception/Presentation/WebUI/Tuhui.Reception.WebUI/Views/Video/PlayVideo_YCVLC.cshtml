@model Tuhui.Reception.Model.tv_video
@{
    Layout = null;
}
<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="pragma" content="no-cache" />
    <title></title>
    @Content.Common(Url, false)
</head>
<body style="background-color: #000;" onload="init();" onclose="close();">
    <div id="main" style="position: absolute; left: 0px; top: 0px;">
        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921"
                width="500"
                height="375"
                id="vlc"
                events="True">
            <param name="MRL" value="" />
            <param name="ShowDisplay" value="True" />
            <param name="AutoLoop" value="False" />
            <param name="AutoPlay" value="True" />
            <param name="Volume" value="50" />
            <param name="toolbar" value="false" />
            <param name="StartTime" value="0" />
            <embed pluginspage="http://www.videolan.org"
                   type="application/x-vlc-plugin"
                   version="VideoLAN.VLCPlugin.2"
                   width="500"
                   height="375"
                   toolbar="false"
                   loop="true"
                   text="Waiting for video"
                   name="vlc" />
        </object>
    </div>
    <div id="message" style="color: #fff; position: absolute; z-index: 101; bottom: 0px; left: 0px; width: 100%; height: 30px; line-height: 30px;">
    </div>
    <script type="text/javascript">
        var CameraID = '@Model.videoaccess';
        var player;
        var hasPlayed = false;
        function setSize() {
            $("body,#main,#vlc").css({
                width: document.documentElement.clientWidth + "px",
                height: document.documentElement.clientHeight + "px"
            })
            $("#message").css({
                'top': (document.documentElement.clientHeight / 2 - 15) + "px"
            })
        }


        $(function () {
            setSize();
            window.onresize = setSize;
            $("#main").css({ "left": "10000px" });
            //$(".p_loading").css({
            //    'top': (document.documentElement.clientHeight - 64) / 2 + "px",
            //    'left': (document.documentElement.clientWidth - 64) / 2 + "px"
            //})
            $("#message").hide();

            if (CameraID == '') {
                showMessage("设备ID缺失");
            } else {
                playVideoYC(CameraID);
            }
        })

        function showMessage(msg) {
            $(".p_loading").hide();
            $("#message").html(msg).show();
        }

        function playVideoYC(_cameraId) {
            showMessage("正在获取视频流地址....");
            $.ajax({
                type: 'GET',
                url: '@Url.Action("YCVideo","Video")',
                dataType: 'json',
                cache: false,
                data: {
                    cameraId: _cameraId
                },
                error: function (info) {
                    showMessage(info.status);
                },
                success: function (response) {
                    //var response = JSON.parse(_response);
                    if (response.returnCode == "00000000") {
                        $(".p_loading").hide();
                        $("#message").show();

                        var vlc = getVLC("vlc");
                        vlc.video.aspectRatio = "4:3";
                        var options = [":rtsp-tcp"];
                        var itemId = vlc.playlist.add(response.outputAddress, "", options);
                        options = [];
                        if (itemId != -1) {
                            // play MRL
                            vlc.playlist.playItem(itemId);
                        }
                    } else {
                        $(".p_loading").hide();
                        $("#message").show().html("设备维护中...");
                    }
                }
            })
        }

        function playVideoRtmp(_outputAddress) {
            var vlc = getVLC("vlc");
            vlc.video.aspectRatio = "4:3";
            var options = [":rtsp-tcp"];
            var itemId = vlc.playlist.add(_outputAddress, "", options);
            options = [];
            if (itemId != -1) {
                // play MRL
                vlc.playlist.playItem(itemId);
            }
        }

        function init() {
            if (navigator.appName.indexOf("Microsoft Internet") == -1) {
                onVLCPluginReady()
            }
            else if (document.readyState == 'complete') {
                onVLCPluginReady();
            }
            else {
                /* Explorer loads plugins asynchronously */
                document.onreadystatechange = function () {
                    if (document.readyState == 'complete') {
                        onVLCPluginReady();
                    }
                }
            }
        }

        function getVLC(name) {
            if (window.document[name]) {
                return window.document[name];
            }
            if (navigator.appName.indexOf("Microsoft Internet") == -1) {
                if (document.embeds && document.embeds[name])
                    return document.embeds[name];
            }
            else // if (navigator.appName.indexOf("Microsoft Internet")!=-1)
            {
                return document.getElementById(name);
            }
        }

        function registerVLCEvent(event, handler) {
            var vlc = getVLC("vlc");

            if (vlc) {
                if (vlc.attachEvent) {
                    // Microsoft
                    vlc.attachEvent(event, handler);
                } else if (vlc.addEventListener) {
                    // Mozilla: DOM level 2
                    vlc.addEventListener(event, handler, true);
                } else {
                    // DOM level 0
                    eval("vlc.on" + event + " = handler");
                }
            }
        }

        function unregisterVLCEvent(event, handler) {
            var vlc = getVLC("vlc");

            if (vlc) {
                if (vlc.detachEvent) {
                    // Microsoft
                    vlc.detachEvent(event, handler);
                } else if (vlc.removeEventListener) {
                    // Mozilla: DOM level 2
                    vlc.removeEventListener(event, handler, true);
                } else {
                    // DOM level 0
                    eval("vlc.on" + event + " = null");
                }
            }
        }
        function handle_MediaPlayerBuffering(val) {
            if (hasPlayed) return;
            $("#message").html(val + "%");
            if (val == 100) {
                hasPlayed = true;
                $("#main").css({ "left": "0px" });
            }
        }

        // VLC Plugin
        function onVLCPluginReady() {

            //    registerVLCEvent("MediaPlayerMediaChanged", handleMediaPlayerMediaChanged);
            //    registerVLCEvent("MediaPlayerNothingSpecial", handle_MediaPlayerNothingSpecial);
            //    registerVLCEvent("MediaPlayerOpening", handle_MediaPlayerOpening);
            registerVLCEvent("MediaPlayerBuffering", handle_MediaPlayerBuffering);
            //    registerVLCEvent("MediaPlayerPlaying", handle_MediaPlayerPlaying);
            //    registerVLCEvent("MediaPlayerPaused", handle_MediaPlayerPaused);
            //    registerVLCEvent("MediaPlayerStopped", handle_MediaPlayerStopped);
            //    registerVLCEvent("MediaPlayerForward", handle_MediaPlayerForward);
            //    registerVLCEvent("MediaPlayerBackward", handle_MediaPlayerBackward);
            //    registerVLCEvent("MediaPlayerEndReached", handle_MediaPlayerEndReached);
            //    registerVLCEvent("MediaPlayerEncounteredError", handle_MediaPlayerEncounteredError);
            //    registerVLCEvent("MediaPlayerTimeChanged", handle_MediaPlayerTimeChanged);
            //    registerVLCEvent("MediaPlayerPositionChanged", handle_MediaPlayerPositionChanged);
            //    registerVLCEvent("MediaPlayerSeekableChanged", handle_MediaPlayerSeekableChanged);
            //    registerVLCEvent("MediaPlayerPausableChanged", handle_MediaPlayerPausableChanged);
            //    registerVLCEvent("MediaPlayerTitleChanged", handle_MediaPlayerTitleChanged);
            //    registerVLCEvent("MediaPlayerLengthChanged", handle_MediaPlayerLengthChanged);
        }

        function close() {
            //unregisterVLCEvent("MediaPlayerMediaChanged", handleMediaPlayerMediaChanged);
            //unregisterVLCEvent("MediaPlayerNothingSpecial", handle_MediaPlayerNothingSpecial);
            //unregisterVLCEvent("MediaPlayerOpening", handle_MediaPlayerOpening);
            unregisterVLCEvent("MediaPlayerBuffering", handle_MediaPlayerBuffering);
            //unregisterVLCEvent("MediaPlayerPlaying", handle_MediaPlayerPlaying);
            //unregisterVLCEvent("MediaPlayerPaused", handle_MediaPlayerPaused);
            //unregisterVLCEvent("MediaPlayerStopped", handle_MediaPlayerStopped);
            //unregisterVLCEvent("MediaPlayerForward", handle_MediaPlayerForward);
            //unregisterVLCEvent("MediaPlayerBackward", handle_MediaPlayerBackward);
            //unregisterVLCEvent("MediaPlayerEndReached", handle_MediaPlayerEndReached);
            //unregisterVLCEvent("MediaPlayerEncounteredError", handle_MediaPlayerEncounteredError);
            //unregisterVLCEvent("MediaPlayerTimeChanged", handle_MediaPlayerTimeChanged);
            //unregisterVLCEvent("MediaPlayerPositionChanged", handle_MediaPlayerPositionChanged);
            //unregisterVLCEvent("MediaPlayerSeekableChanged", handle_MediaPlayerSeekableChanged);
            //unregisterVLCEvent("MediaPlayerPausableChanged", handle_MediaPlayerPausableChanged);
            //unregisterVLCEvent("MediaPlayerTitleChanged", handle_MediaPlayerTitleChanged);
            //unregisterVLCEvent("MediaPlayerLengthChanged", handle_MediaPlayerLengthChanged);
        }
    </script>

</body>
</html>